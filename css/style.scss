// sass -t compressed --watch style.scss:style.css
@import "mixins";

@import url('http://fonts.googleapis.com/css?family=Anonymous+Pro');
$font: "Anonymous Pro", monospace;
$fsize: 1.1em;

// Greens
// ============
$soft:      #2A742A;
$soft_2:    #63B963;
$soft_3:    #254625;
$soft_4:    #0E1C0E;

$soft_rgba: rgba(42, 116, 42, 0.75);

$bright:     #43B943;
$bright_mid: #51DF51;
$bright_2:   #5CFF5C; // normal from /js/shirousagi.js
$high:       #8F8;

// Blues (~purple)
// ========================
$soft_blue:     #2A2A74;
$bright_blue:   #4343B9;
$bright_blue_2: #5C5CFF;

$light_blue:    #2F6CD2;
$dark_blue:     #002C92;
$dark_blue_2:   #001C82;
$dark_blue_3:   #000022;

// Very dark
// ============
$dark: #272926;
$dark_mid: #191A18;
$dark_2: #0B0B0A;
$dark_3: #070707;


html, body {
	margin: 0;
	width: 100%;
	height: 100%;
	background: #000;
	overflow: none;
}

#wrap {
	min-width: 100%;
	min-height: 100%;
	font-family: $font;
	background: $dark_mid;
	overflow: scroll;
}

a {
	text-decoration: none;
	color: #FFF;
	@include transition(color 0.4s ease);

	&:hover {
		color: $light_blue;
	}
}

::selection {
	background: $light_blue;
	color: #FFF;
}

::-moz-selection {
	background: $light_blue;
	color: #FFF;
}

.vert-center-wrap {
	display: block;
	position: absolute;
	bottom: 50%;
	width: 100%;
	z-index: 2;
}


// Enter text vars
$enter_str: 'press any key to enter'; // Copy the string from index.html here
$text_len: str-length($enter_str) + 1;
$final_w: $text_len / 2 + 0.5em; // This is in em
$et_fsize: $fsize * 1.3;

.enter-text-wrap {
	display: block;
	font-size: $et_fsize;
	width: $final_w;
	margin: 0 auto;
}

#enter-text {
	display: block;

	// For animations
	width: 0;
	white-space: nowrap;
	overflow: hidden;
	// Return to transparent when finished typing
	border-right: 2px solid transparent;

	text-align: center;
	color: $bright;

	// Animation vars
	$steps: $text_len - 1;
	$type_delay: 1s;
	$type_dur: 1s; // Duration
	$cursor_dur: 0.5s;
	// $cursor_iter: ($type_delay + $type_dur) / $cursor_dur;
	$cursor_iter: infinite;

	animation: type $type_delay steps($steps) $type_dur 1 normal both,
		blink_cursor $cursor_dur steps(50) $cursor_iter alternate;
}

@keyframes type {
	from {
		width: 0;
	}
	to {
		width: $final_w;
	}
}
@keyframes blink_cursor {
	from {
		border-right-color: transparent;
	}
	to {
		border-right-color: $soft_2;
	}
}

#canvas {
	position: absolute;
	display: block;
	z-index: 1;

	width: 100%;
	height: 100%;
	background: #000;

	// Disallow select canvas
	user-select: none;
	-webkit-user-select: none;
	-moz-user-select: none;
}

// SVG border size
$svgb_size: 1px;
$svgb_radius: 0.3em; // Border radius
// SVG hover border color
$shc_color: $light_blue;

// Arrow border color
$arb_color: $shc_color;
$arrow_bg: $light_blue;
$arrow_text_color: #FFF;

// Triangle size
$tsize: 0.7em;
$tborder_size: $svgb_size;
$toffset: round($tborder_size * 1.41421);
$toffset: ($toffset / 16px) + 0em; // Convert from px to em
$tsize_outer: $tsize + $toffset;

.arrow {
	display: block;
	position: relative;
	margin-top: $tsize_outer;
	border: $tborder_size solid $arb_color;

	// &::before, &::after {
	&::after {
		content: '';
		display: block;
		position: absolute;
		bottom: 100%;
		left: 50%;
		height: 0;
		width: 0;
		border: solid transparent;
	}

	&::after {
		border-bottom-color: $arrow_bg;
		border-width: $tsize;
		margin-left: -$tsize;
	}

	// For border on triangle
	// ========================
	// &::before {
	// 	border-bottom-color: #FFF;
	// 	border-width: $tsize_outer;
	// 	margin-left: -$tsize_outer;
	// }
}

#info {
	$w: 35%;
	width: $w;
	$h: 50%;
	height: $h;
	margin: ($h / 4) auto 0;
	z-index: -1;
	opacity: 0;

	> .info-text {
		color: $bright_2;
		font-size: $fsize * 5 / 6;
		text-align: center;
	}

	$svg: 4em;
	$svg_cntr: $svg * 3 / 2;
	$svg_marg: $svg / 2;

	$sht_dur: 0.4s; // Duration
	@mixin svg_hover_transition($option) {
		@include transition($option $sht_dur ease);
	}

	> #svg-container {
		width: 80%;
		min-width: $svg_cntr * 3 + $svg_marg * 2;
		margin: 5% auto;
		display: flex;
		justify-content: space-between;

		> div {
			> a {
				width:  $svg_cntr;
				min-height: $svg_cntr;
				display: inline-block;
				border: $svgb_size solid $soft_3;
				@include border-radius($svgb_radius);
				@include svg_hover_transition(border-color);

				text-decoration: none;

				> svg {
					display: block;
					height: $svg;
					margin: ( $svg_marg / 2 ) auto 0;
					fill: $bright_mid;
					// -webkit-mask-image: -webkit-gradient(
					// 	linear, left top, left bottom, from($soft), to($soft_rgba)
					// );
					@include svg_hover_transition(fill);
				}

				> .arrow-wrap {
					position: relative;
					margin-top: $svg_marg / 3;

					max-height: 0;
					overflow-y: hidden;
					@include transition(max-height 0.2s ease);
				}

				> .arrow-wrap > .arrow {
					z-index: 1;
					border-bottom-left-radius: $svgb_radius / 2;
					border-bottom-right-radius: $svgb_radius / 2;
					padding: 0.3em 0;
					background-color: $arrow_bg;
					color: $arrow_text_color;

					text-align: center;

					// border: $tborder_size solid $shc_color;

					border-color: $arb_color transparent transparent;
					border-width: $tborder_size 0 0;
				}

				// Slide up the arrow when hover, slide down by default
				> .arrow-wrap > .arrow::after {
					margin-bottom: -$tsize + $toffset * 2;
					@include transition(margin-bottom 0.2s ease);
				}
			}

			> a:hover {
				border-color: $shc_color;

				> svg {
					fill: #FFF;
				}

				> .arrow-wrap {
					max-height: 100%;
					@include transition(max-height 0.8s ease-in-out);

					> .arrow::after {
						margin-bottom: 0;
						@include transition(margin-bottom $sht_dur ease-in);
					}
				}
			}
		}
	}
}

#src {
	z-index: -1;
	opacity: 0;

	display: block;
	width: 100%;
	text-align: center;
	bottom: $fsize * 1.5;

	> a {
		font-size: $fsize * 2 / 3;
	}
}

// For the complete() function in /js/shirousagi.js
#canvas, #info, #src {
	@include transition(opacity 0.7s ease-in);
}
