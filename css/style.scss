// sass -t compressed --watch style.scss:style.css
@import "mixins";

@import url('http://fonts.googleapis.com/css?family=Anonymous+Pro');
$font: "Anonymous Pro", monospace;
$fsize: 1.1em;

// Greens
// ============
$soft:      #2A742A;
$soft_05:   #1B4A1B;
$soft_2:    #63B963;
$soft_3:    #254625;
$soft_4:    #0E1C0E;

$soft_rgba: rgba(42, 116, 42, 0.75);

$bright:     #43B943;
$bright_mid: #51DF51;
$bright_2:   #5CFF5C; // normal from /js/shirousagi.js
$high:       #8F8;

// Blues (~purple)
// ========================
$soft_blue:     #2A2A74;
$bright_blue:   #4343B9;
$bright_blue_2: #5C5CFF;

$light_blue:    #2F6CD2;
$dark_blue:     #002C92;
$dark_blue_2:   #001C82;
$dark_blue_3:   #000022;

// Very dark
// ============
$dark: #272926;
$dark_mid: #191A18;
$dark_2: #0B0B0A;
$dark_3: #070707;


html, body {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
	background: #000;

	color: $bright_2;
	font-family: $font;
}

::selection {
	background: $light_blue;
	color: #FFF;
}

::-moz-selection {
	background: $light_blue;
	color: #FFF;
}

a {
	text-decoration: none;
	color: #FFF;
	@include transition(color 0.4s ease);

	&:hover {
		color: $light_blue;
	}
}

.vert-center-wrap {
	display: block;
	position: absolute;
	bottom: 50%;
	width: 100%;
	z-index: 2;
}


@function final_w($str) {
	$text_len: str-length($str) + 1;

	$final_w: $text_len / 2;

	@if ($text_len > 10) {
		$final_w: $final_w + if($text_len % 2 == 0, 0.75, 0.5);
	}
	@else {
		$final_w: $final_w - 0.2;
	}

	// This is in em
	@return $final_w + 0em;
}

@mixin anim_setup() {
	// For animations
	width: 0;
	white-space: nowrap;
	overflow: hidden;
	// Return to transparent when finished typing
	border-right: 2px solid transparent;
}

@mixin type_animate($str, $iter: null, $pad: false) {
	// Animation vars
	$len: str-length($str);
	$steps: $len;

	$type_delay: 1s;
	// Duration
	$type_dur: if($steps <= 10, 0.4s, 1s);
	$cursor_dur: 0.5s;

	$cursor_iter: null;
	@if ($iter) {
		$cursor_iter: $iter;
	}
	@else {
		// Only flash cursor until done typing
		$cursor_iter: ($type_delay + $type_dur) / $cursor_dur;
	}

	$kf_type:  'type_'  + $len;
	$kf_blink: 'blink_' + $len;

	@keyframes #{$kf_type} {
		from {
			width: 0;
			@if ($pad) {
				padding-left: 0;
			}
		}
		to {
			width: final_w($str);
			@if ($pad) {
				padding-left: (0.4 / 8 + 0em);
			}
		}
	}
	@keyframes #{$kf_blink} {
		from {
			border-right-color: transparent;
		}
		to {
			border-right-color: $soft_2;
		}
	}

	@include animation(
		#{$kf_type} $type_dur steps($steps) $type_delay 1 normal both,
		#{$kf_blink} $cursor_dur steps(50) $cursor_iter alternate
	);
}

// Enter text vars
$enter_str: 'press any key or tap to enter'; // Copy the string from index.html here
$et_fsize: $fsize * 1.3;

.enter-text-wrap {
	display: block;
	font-size: $et_fsize;
	width: final_w($enter_str);
	margin: 0 auto;
}

#enter-text {
	display: block;

	@include anim_setup();

	text-align: center;
	color: $bright;

	@include type_animate($enter_str, infinite);
}

#wrap {
	display: block;
	position: relative;
	min-width: 100%;
	min-height: 100%;
	margin: 0 auto;

	background: $dark_mid;
	overflow-y: scroll;

	// Only add this class to the home page
	&.home {
		z-index: -1;
		opacity: 0;
		// Prevent extra space on space until after canvas animations are done
		max-height: 0;
	}
}

#canvas {
	position: absolute;
	display: block;
	z-index: 1;

	width: 100%;
	height: 100%;
	background: #000;

	// Disallow select canvas
	user-select: none;
	-webkit-user-select: none;
	-moz-user-select: none;
}

// For the complete() function in /js/shirousagi.js
#canvas, #wrap {
	@include transition(opacity 0.7s ease-in);
}

// For pages other than home
#info {
	width: 50%;
	$h: 50%;
	min-height: $h;
	margin: 4em auto 0;

	color: $bright;

	// Info title css
	> .info-title-wrap {
		display: block;
		margin: 0 auto;
		font-size: $fsize * 8;

		// &.about {
		// 	// Copy string from about/index.html
		// 	$str: 'About';
		// 	width: final_w($str);

		// 	> .info-title {
		// 		@include type_animate($str, null, true);
		// 	}
		// }

		// &.projects {
		// 	// Copy string from projects/index.html
		// 	$str: 'Projects';
		// 	width: final_w($str);

		// 	> .info-title {
		// 		@include type_animate($str, null, true);
		// 	}
		// }

		// &.contact {
		// 	// Copy string from contact/index.html
		// 	$str: 'Contact';
		// 	width: final_w($str);

		// 	> .info-title {
		// 		@include type_animate($str, null, true);
		// 	}
		// }

		> .info-title {
			color: $soft_05;
			text-align: center;
			// $pad: 0.4 / 8 + 0em;
			// padding: 0 0 $pad $pad;

			// @include anim_setup();
		}
	}
}

// For the home page links
#home {
	width: 40%;
	$h: 50%;
	min-height: $h;
	margin: ($h / 4) auto 0;

	> a {
		display: block;
		font-size: $fsize * 4;
		color: $bright;
		transition: none;

		&:hover {
			color: #FFF;
		}

		&.selected {
			color: #FFF;
		}
	}
}

.left-home {
	margin: 8em 0 0 4em;
	position: absolute;
	left: 0;

	> a {
		display: block;
		font-size: $fsize * 2;
		color: $bright;
		transition: none;

		&:hover {
			color: #FFF;
		}

		&.selected {
			color: #FFF;
		}
	}
}

#footer {
	display: block;
	width: 100%;
	padding: 2em 0;
	bottom: 0;

	color: $soft;
	font-size: $fsize * 2 / 3;
	text-align: center;
}

.svg-container {
	$num_svg: 4; // Number of SVG links

	$svg: 4em;
	$svg_cntr: $svg * 3 / 2;
	$svg_marg: $svg / 2;

	// SVG border size
	$svgb_size: 1px;
	$svgb_radius: 0.3em; // Border radius
	// SVG hover border color
	$shc_color: $light_blue;

	// Arrow border color
	$arb_color: $shc_color;
	$arrow_bg: $light_blue;
	$arrow_text_color: #FFF;

	// Triangle size
	$tsize: $svg / 5.7;
	$tborder_size: $svgb_size;
	$toffset: round($tborder_size * 1.41421); // sqrt(2) ~ 1.41421
	$toffset: ($toffset / 16px) + 0em; // Convert from px to em
	$tsize_outer: $tsize + $toffset;


	// Height is the SVG itself, the margin,
	// the arrow dropdown, plus the border converted to em
	height: $svg * (1 + 1 + 0.5) + ( ($svgb_size / 16px) + 0em );
	width: 40%;
	min-width: $svg_cntr * $num_svg + $svg_marg * 2;
	margin: ($svg / 2) auto 0;
	@include columns($num_svg);

	$sht_dur: 0.4s; // Duration
	@mixin svg_hover_transition($option) {
		@include transition($option $sht_dur ease);
	}


	.arrow {
		display: block;
		position: relative;
		margin-top: $tsize_outer;
		border: $tborder_size solid $arb_color;
		font-size: $svg / 4;

		// &::before, &::after {
		&::after {
			content: '';
			display: block;
			position: absolute;
			bottom: 100%;
			left: 50%;
			height: 0;
			width: 0;
			border: solid transparent;
		}

		&::after {
			border-bottom-color: $arrow_bg;
			border-width: $tsize;
			margin-left: -$tsize;
		}

		// For border on triangle
		// ========================
		// &::before {
		// 	border-bottom-color: #FFF;
		// 	border-width: $tsize_outer;
		// 	margin-left: -$tsize_outer;
		// }
	}

	> div {
		> a {
			width:  $svg_cntr;
			min-height: $svg_cntr;
			display: inline-block;

			border: $svgb_size solid $soft_3;
			@include border-radius($svgb_radius);
			@include svg_hover_transition(border-color);

			text-decoration: none;

			> svg {
				display: block;
				height: $svg;
				margin: ( $svg_marg / 2 ) auto 0;
				fill: $bright_mid;
				// -webkit-mask-image: -webkit-gradient(
				// 	linear, left top, left bottom, from($soft), to($soft_rgba)
				// );
				@include svg_hover_transition(fill);

				> text {
					-webkit-user-select: none;
					-moz-user-select: none;
					-ms-user-select: none;
					user-select: none;
				}
			}

			> .arrow-wrap {
				position: relative;
				margin-top: $svg_marg / 3;

				max-height: 0;
				overflow-y: hidden;
				@include transition(max-height 0.2s ease);
			}

			> .arrow-wrap > .arrow {
				z-index: 1;
				border-bottom-left-radius: $svgb_radius / 2;
				border-bottom-right-radius: $svgb_radius / 2;
				padding: 0.3em 0;
				background-color: $arrow_bg;
				color: $arrow_text_color;

				text-align: center;

				// border: $tborder_size solid $shc_color;

				border-color: $arb_color transparent transparent;
				border-width: $tborder_size 0 0;
			}

			// Slide up the arrow when hover, slide down by default
			> .arrow-wrap > .arrow::after {
				margin-bottom: -$tsize + $toffset * 2;
				@include transition(margin-bottom 0.2s ease);
			}
		}

		> a:hover {
			border-color: $shc_color;

			> svg {
				fill: #FFF;
			}

			> .arrow-wrap {
				max-height: 100%;
				@include transition(max-height 0.8s ease-in-out);

				> .arrow::after {
					margin-bottom: 0;
					@include transition(margin-bottom $sht_dur ease-in);
				}
			}
		}
	}
}
